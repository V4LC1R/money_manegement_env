// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int @id @default(autoincrement())
  email     String   @unique
  name      String   @db.VarChar(256)
  password  String   @db.VarChar(512)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  holders                Holder[]
  accounts               Account[]
  transactionsFinancials FinancialTransaction[]
}

model Holder {
  id        Int @id @default(autoincrement())
  name      String @db.VarChar(256) 
  value     Float @db.DoublePrecision
  ownerId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  owner             User @relation(fields: [ownerId], references: [id])
  transactionsForms TransactionsForms[]
}

model Recurrence {
  id          Int @id @default(autoincrement())
  name        String @db.VarChar(256)
  reptition   Int
  range       Int //mensal - trimestral - semestral - anual
  value       Float @db.DoublePrecision
  categoryId  Int
  type        Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  category AccountPlan @relation(fields: [categoryId], references: [id])
  
}

model Account {
  id            Int @id @default(autoincrement())
  description  String @db.VarChar(512)
  balance       Float @db.DoublePrecision // valor total da conta
  userId        Int
  categoryId    Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user                  User @relation(fields: [userId], references: [id])
  parcels               Parcel[]
  category              AccountPlan @relation(fields: [categoryId], references: [id])
  financialTransactions FinancialTransaction[]
}

model Parcel {
  id         Int @id @default(autoincrement())
  value      Float @db.DoublePrecision // valor da parcela
  dueDate    DateTime // data de vencimento da parcela
  competence DateTime // data de competencia da parcela - credito| parcelamentos | debitos
  accountId  Int
  categoryId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  category              AccountPlan @relation(fields: [categoryId], references: [id])
  account               Account @relation(fields: [accountId], references: [id])
  FinancialTransactions FinancialTransaction[]
}

model TransactionsForms {
  id        Int @id @default(autoincrement())
  name      String @db.VarChar(256)
  type      Int
  holderId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  holder                Holder @relation(fields: [holderId], references: [id])
  FinancialTransactions FinancialTransaction[]
}

model FinancialTransaction {
  id                  Int @id @default(autoincrement())
  description         String @db.VarChar(256)
  value               Float @db.DoublePrecision
  userId              Int
  transactionsFormsId Int
  categoryId          Int
  parcelId            Int
  accountId           Int
  typeId              Int // 1 - entrada | 2 - saida
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt

  typeTransaction  TransactionType @relation(fields: [typeId], references: [id])
  user             User @relation(fields: [userId], references: [id])
  category         AccountPlan @relation(fields: [categoryId], references: [id])
  account          Account @relation(fields: [accountId], references: [id])
  parcel           Parcel @relation(fields: [parcelId], references: [id])
  transactionsForm TransactionsForms @relation(fields: [transactionsFormsId], references: [id])
}

model TransactionType {
  id        Int @id @default(autoincrement())
  name      String @db.VarChar(256)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  financialTransactions FinancialTransaction[]
}

model AccountPlan {
  id        Int @id @default(autoincrement())
  name      String @db.VarChar(256)
  type      Int // 1 - receita | 2 - despesa
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  recurrences           Recurrence[]
  accounts              Account[]
  parcels               Parcel[]
  financialTransactions FinancialTransaction[]
}

